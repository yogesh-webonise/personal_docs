<div class="specialeffect"></div>

.specialeffect{
        position:relative;
        width:400px;
        height:30px;
        border:1px solid #333;
        margin:0 auto;
        margin-top:20px;
        -webkit-transition-property:color, background; 
        -webkit-transition-duration: 1s, 1s; 
        -webkit-transition-timing-function: linear, ease-in; 
      }
      .specialeffect:hover{ 
         background-color: #AD310B;
        -webkit-transition: background-color 1000ms linear;
        -moz-transition: background-color 1000ms linear;
        -o-transition: background-color 1000ms linear;
        -ms-transition: background-color 1000ms linear;
        transition: background-color 1000ms linear;
      }
      
--------------------------------------------------------------------------------------------------------------------------------------------

%div.selector
  %ul
    - (1..8).each do |i|
      %li
        %input{:id => "c#{i}", :type => "checkbox"}
        %label{:for => "c#{i}"} Option #{i}
  %button Click here
  
 $angleStart: -360deg;
$buttonSize: 140px;
$optionSize: 80px;
$spacing: 20px;
$speed: .8s;

html, body {
    height: 100%;
}
body {
    margin: 0;
    background: linear-gradient(#eee, #ccc);
    overflow: hidden;
}

.selector {
    position: absolute;
    left:50%; top:50%;
    width:$buttonSize; height:$buttonSize;
    margin-top: -$buttonSize/2;
    margin-left: -$buttonSize/2;
}

.selector, .selector button {
    font-family: 'Oswald', sans-serif;
    font-weight: 300;
}

.selector button {
    position: relative;
    width:100%; height:100%;
    padding: 10px;
    background: #428bca;
    border-radius: 50%;
    border: 0;
    color: white;
    font-size: 20px;
    cursor: pointer;
    box-shadow: 0 3px 3px rgba(0,0,0,.1);
    transition: all .1s;
}
.selector button:hover {
    background: #3071a9;
}
.selector button:focus {
    outline: none;
}

.selector ul {
    position: absolute;
    list-style: none;
    padding:0; margin:0;
    top:-$spacing; right:-$spacing; bottom:-$spacing; left:-$spacing;
}

.selector li {
    position: absolute;
    width:0; height: 100%;
    margin: 0 50%;
    -webkit-transform: rotate($angleStart);
    transition: all $speed ease-in-out;
}

.selector li input {
    display: none;
}

.selector li input + label {
    position: absolute;
    left:50%; bottom:100%;
    width:0; height:0;
    line-height: 1px;
    margin-left: 0;
    background: #fff;
    border-radius: 50%;
    text-align: center;
    font-size: 1px;
    overflow: hidden;
    cursor: pointer;
    box-shadow: none;
    transition: all $speed ease-in-out, color .1s, background .1s;
}
.selector li input + label:hover {
    background: #f0f0f0;
}
.selector li input:checked + label {
    background: #5cb85c;
    color: white;
}
.selector li input:checked + label:hover {
    background: #449d44;
}
.selector.open li input + label {
    width:$optionSize; height:$optionSize;
    line-height: $optionSize;
    margin-left: -($optionSize/2);
    box-shadow: 0 3px 3px rgba(0,0,0,.1);
    font-size: 14px;
}

var nbOptions = 8;
var angleStart = -360;

// jquery rotate animation
function rotate(li,d) {
    $({d:angleStart}).animate({d:d}, {
        step: function(now) {
            $(li)
               .css({ transform: 'rotate('+now+'deg)' })
               .find('label')
                  .css({ transform: 'rotate('+(-now)+'deg)' });
        }, duration: 0
    });
}

// show / hide the options
function toggleOptions(s) {
    $(s).toggleClass('open');
    var li = $(s).find('li');
    var deg = $(s).hasClass('half') ? 180/(li.length-1) : 360/li.length;
    for(var i=0; i<li.length; i++) {
        var d = $(s).hasClass('half') ? (i*deg)-90 : i*deg;
        $(s).hasClass('open') ? rotate(li[i],d) : rotate(li[i],angleStart);
    }
}

$('.selector button').click(function(e) {
    toggleOptions($(this).parent());
});

setTimeout(function() { toggleOptions('.selector'); }, 100);

--------------------------------------------------------------------------------------------------------------------------------------------

<div class="menu">
  <div class="btn trigger">
    <span class="line"></span>
  </div>
  <div class="rotater">
    <div class="btn btn-icon">
      <i class="fa fa-codepen"></i>
    </div>
  </div>
  <div class="rotater">
    <div class="btn btn-icon">
      <i class="fa fa-facebook"></i>
    </div>
  </div>
  <div class="rotater">
    <div class="btn btn-icon">
      <i class="fa fa-google-plus"></i>
    </div>
  </div>
  <div class="rotater">
    <div class="btn btn-icon">
      <i class="fa fa-twitter"></i>
    </div>
  </div>
  <div class="rotater">
    <div class="btn btn-icon">
      <i class="fa fa-dribbble"></i>
    </div>
  </div>
  <div class="rotater">
    <div class="btn btn-icon">
      <i class="fa fa-linkedin"></i>
    </div>
  </div>
  <div class="rotater">
    <div class="btn btn-icon">
      <i class="fa fa-github"></i>
    </div>
  </div>
  <div class="rotater">
    <div class="btn btn-icon">
      <i class="fa fa-behance"></i>
    </div>
  </div>
</div>


*, *:before, *:after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
html, body {
  height: 100%;
  overflow: hidden;
}
body {
  background:
    linear-gradient(45deg, hsla(352, 96%, 45%, 1) 0%, hsla(352, 96%, 45%, 0) 70%),
    linear-gradient(135deg, hsla(253, 95%, 42%, 1) 10%, hsla(253, 95%, 42%, 0) 80%),
    linear-gradient(225deg, hsla(179, 91%, 45%, 1) 10%, hsla(179, 91%, 45%, 0) 80%),
    linear-gradient(315deg, hsla(119, 96%, 49%, 1) 100%, hsla(119, 96%, 49%, 0) 70%);
}
.absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
}
.menu {
  @extend .absolute-center;
  width: 5em;
  height: 5em;

  .btn {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: rgba(255,255,255, 0.15);
    opacity: 0;
    z-index: -10;
    cursor: pointer;
    transition: opacity 1s, z-index 0.3s, transform 1s;
    transform: translateX(0);

    .fa {
      @extend .absolute-center;
      font-size: 3em;
      transition: color 0.3s;
    }
    
    &:hover .fa {
      color: rgba(255,255,255, 0.7);
    }

    &.trigger {
      opacity: 1;
      z-index: 100;
      cursor: pointer;
      transition: transform 0.3s;
      
      &:hover {
        transform: scale(1.2);
        
        .line {
          background-color: rgba(255,255,255, 0.7);
          
          &:before, &:after {
            background-color: rgba(255,255,255, 0.7);
          }
        }
      }

      .line {
        @extend .absolute-center;
        width: 60%;
        height: 6px;
        background: #000;
        border-radius: 6px;
        transition: background-color 0.3s, height 0.3s, top 0.3s;

        &:before, &:after {
          content: "";
          display: block;
          position: absolute;
          left: 0;
          width: 100%;
          height: 6px;
          background: #000;
          border-radius: 6px;
          transition: background-color 0.3s, transform 0.3s;
        }
        &:before {
          top: -12px;
          transform-origin: 15% 100%;
        }
        &:after {
          top: 12px;
          transform-origin: 25% 30%;
        }
      }
    }
  }

  .rotater {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform-origin: 50% 50%;
  }

  &.active {
    
    .btn-icon {
      opacity: 1;
      z-index: 50;
    }
    
    .trigger {
      
      .line {
        height: 0px;
        top: 45%;
        
        &:before {
          transform: rotate(45deg);
          width: 110%;
        }
        &:after {
          transform: rotate(-45deg);
          width: 110%; 
        }
      }
    }
  }
}

/* horrible things are happening here
for some reason nth-child(1) is always busy and elements starting from 2 */
@for $i from 1 through 9 {
  .rotater:nth-child(#{$i}) {
    transform: rotate(22.5deg - 45 + (45 * ($i - 1)));
  }

  .menu.active {
    .rotater:nth-child(#{$i}) .btn-icon {
      transform: translateX(-10em) rotate(-22.5deg + 45 - (45 * ($i - 1))); 
    }
  }
}

$(document).ready(function() {
  $(".trigger").click(function() {
    $(".menu").toggleClass("active"); 
  });
});

---------------------------------------------------------------------------------------------------------------------------------------------------------

<a class="roll-link" href="#"><span data-title="Flip Me" href="#">Flip Me</span></a>

a {
			text-decoration: none;
			background: #DD4D42;
			color: white;
		}
		.roll-link {
			display: inline-block;
			-webkit-perspective: 600px;
			-moz-perspective: 600px;
			-ms-perspective: 600px;
			perspective: 600px;
			-webkit-perspective-origin: 50% 50%;
			-moz-perspective-origin: 50% 50%;
			-ms-perspective-origin: 50% 50%;
			perspective-origin: 50% 50%;
		}
		.roll-link span {
			display: block;
			padding: 0 2px;
			-webkit-transition: all 400ms ease;
			-moz-transition: all 400ms ease;
			-ms-transition: all 400ms ease;
			transition: all 400ms ease;
			-webkit-transform-origin: 50% 0%;
			-moz-transform-origin: 50% 0%;
			-ms-transform-origin: 50% 0%;
			transform-origin: 50% 0%;
			-webkit-transform-style: preserve-3d;
			-moz-transform-style: preserve-3d;
			-ms-transform-style: preserve-3d;
			transform-style: preserve-3d;
		}
		.roll-link:hover span {
			-webkit-transform: translate3d( 0px, 0px, -30px ) rotateX( 90deg );
			-moz-transform: translate3d( 0px, 0px, -30px ) rotateX( 90deg );
			-ms-transform: translate3d( 0px, 0px, -30px ) rotateX( 90deg );
			transform: translate3d( 0px, 0px, -30px ) rotateX( 90deg );
		}
		.roll-link span:after {
			content: attr(data-title);
			display: block;
			position: absolute;
			left: 0;
			top: 0;
			padding: 0 2px;
			-webkit-transform-origin: 50% 0%;
			-moz-transform-origin: 50% 0%;
			-ms-transform-origin: 50% 0%;
			transform-origin: 50% 0%;
			-webkit-transform: translate3d( 0px, 105%, 0px ) rotateX( -90deg );
			-moz-transform: translate3d( 0px, 105%, 0px ) rotateX( -90deg );
			-ms-transform: translate3d( 0px, 105%, 0px ) rotateX( -90deg );
			transform: translate3d( 0px, 105%, 0px ) rotateX( -90deg );
		}
    
  